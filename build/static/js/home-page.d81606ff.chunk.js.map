{"version":3,"sources":["pages/HomePage.js"],"names":["MoviesPage","useState","movies","setMovies","currentPage","setCurrentPage","isLoading","setIsLoading","useEffect","movieShelfAPI","then","data","prev","results","finally","dataLength","next","prevCurrentPage","hasMore","text"],"mappings":"mPASe,SAASA,IACtB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACRD,GAAa,GACbE,IACeL,GACZM,MAAK,SAAAC,GACJR,GAAU,SAAAS,GAAI,4BAAQA,GAAR,YAAiBD,EAAKE,gBAYrCC,SAAQ,kBAAMP,GAAa,QAC7B,CAACH,IAWJ,OACE,qCACGE,GAAa,cAAC,IAAD,IACd,cAAC,IAAD,IACA,eAAC,IAAD,CACES,WAAYX,EACZY,KAAM,WATVX,GAAe,SAAAY,GAAe,OAAIA,EAAkB,MAUhDC,SAAS,EAHX,UAKE,cAAC,IAAD,CAAaC,KAAK,mBACjBjB,GAAU,cAAC,IAAD,CAAYA,OAAQA","file":"static/js/home-page.d81606ff.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n// import { IoReloadSharp } from 'react-icons/io5';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport * as movieShelfAPI from '../services/movieshelf-api';\r\nimport PageHeading from '../components/PageHeading';\r\nimport MoviesList from '../components/MoviesList';\r\nimport UpArrowBtn from '../components/UpArrowBtn';\r\nimport Spinner from '../components/Loader';\r\n\r\nexport default function MoviesPage() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    movieShelfAPI\r\n      .fetchMovies(currentPage)\r\n      .then(data => {\r\n        setMovies(prev => [...prev, ...data.results]);\r\n\r\n        // TODO: Добавляет плавный Scroll в низ при нажатии на Loader\r\n        // if (currentPage > 1) {\r\n        //   setTimeout(() => {\r\n        //     window.scrollBy({\r\n        //       top: document.documentElement.clientHeight - 120,\r\n        //       behavior: 'smooth',\r\n        //     });\r\n        //   }, 600);\r\n        // }\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, [currentPage]);\r\n\r\n  // TODO : Замена \"Infinite Scroll\" на кнопку \"Loader\"\r\n  // const onClickBtn = () => {\r\n  //   setCurrentPage(prevCurrentPage => prevCurrentPage + 1);\r\n  // };\r\n\r\n  const onNextPages = () => {\r\n    setCurrentPage(prevCurrentPage => prevCurrentPage + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Spinner />}\r\n      <UpArrowBtn />\r\n      <InfiniteScroll\r\n        dataLength={currentPage}\r\n        next={() => onNextPages()}\r\n        hasMore={true}\r\n      >\r\n        <PageHeading text=\"Trending today\" />\r\n        {movies && <MoviesList movies={movies} />}\r\n      </InfiniteScroll>\r\n\r\n      {\r\n        // TODO: Замена \"Infinite Scroll\" на кнопку \"Loader\"\r\n        /* {!isLoading && (\r\n        <button onClick={onClickBtn} type=\"button\" className=\"btnLoadMoreSharp\">\r\n          <IoReloadSharp className=\"loadMoreSharp\" />\r\n        </button>\r\n      )} */\r\n      }\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}